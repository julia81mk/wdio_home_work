{"info":{"type":"runner","start":"2023-08-31T18:24:30.903Z","end":"2023-08-31T18:24:34.104Z","_duration":3201,"cid":"0-0","capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"116.0.5845.110","chrome":{"chromedriverVersion":"116.0.5845.96 (1a391816688002153ef791ffe60d9e899a71a037-refs/branch-heads/5845@{#1382})","userDataDir":"C:\\Users\\Julia\\AppData\\Local\\Temp\\scoped_dir26440_2091347799"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:64040"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true,"sessionId":"d7cd13895b8a4e75388ba67b433d373d"},"sanitizedCapabilities":"chrome.116_0_5845_110.windows","config":{"protocol":"http","hostname":"0.0.0.0","path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\Julia\\AppData\\Local\\Temp","port":64032,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"automationProtocol":"webdriver","specs":["./test/specs/**/*.js"],"exclude":[],"suites":{},"rootDir":"C:\\Work\\Automation JS My course\\WDIO_test","baseUrl":"http://localhost","bail":0,"waitforInterval":500,"waitforTimeout":10000,"framework":"mocha","reporters":["spec",["html-nice",{"outputDir":"./reports/html-reports/","filename":"report.html","reportTitle":"Test Report Title","linkScreenshots":true,"showInBrowser":false,"collapseTests":false,"useOnAfterCommandForScreenshot":false,"LOG":{"category":"default","context":{},"callStackSkipIndex":0}}]],"services":[],"execArgv":[],"maxInstances":10,"maxInstancesPerCapability":100,"injectGlobals":true,"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"filesToWatch":[],"onPrepare":[null],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[],"beforeCommand":[],"afterCommand":[],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[],"onComplete":[null],"onReload":[]},"specs":["file:///C:/Work/Automation%20JS%20My%20course/WDIO_test/test/specs/test.e2e.js"],"sessionId":"d7cd13895b8a4e75388ba67b433d373d","isMultiremote":false,"instanceOptions":{"d7cd13895b8a4e75388ba67b433d373d":{"protocol":"http","hostname":"0.0.0.0","path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\Julia\\AppData\\Local\\Temp","port":64032,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"automationProtocol":"webdriver","specs":["./test/specs/**/*.js"],"exclude":[],"suites":{},"rootDir":"C:\\Work\\Automation JS My course\\WDIO_test","baseUrl":"http://localhost","bail":0,"waitforInterval":500,"waitforTimeout":10000,"framework":"mocha","reporters":["spec",["html-nice",{"outputDir":"./reports/html-reports/","filename":"report.html","reportTitle":"Test Report Title","linkScreenshots":true,"showInBrowser":false,"collapseTests":false,"useOnAfterCommandForScreenshot":false,"LOG":{"category":"default","context":{},"callStackSkipIndex":0}}]],"services":[],"execArgv":[],"maxInstances":10,"maxInstancesPerCapability":100,"injectGlobals":true,"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"filesToWatch":[],"onPrepare":[null],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[],"beforeCommand":[],"afterCommand":[],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[],"onComplete":[null],"onReload":[]}},"retry":0,"failures":0,"retries":0},"metrics":{"passed":2,"skipped":0,"failed":0,"duration":3083,"start":"2023-08-31T18:24:30.914Z","end":"2023-08-31T18:24:33.997Z"},"title":"Micro-Magic Web Test Report","suites":[{"type":"suite:start","start":"2023-08-31T18:24:30.914Z","end":"2023-08-31T18:24:33.997Z","_duration":3083,"uid":"suite-0-0","cid":"0-0","file":"C:\\Work\\Automation JS My course\\WDIO_test\\test\\specs\\test.e2e.js","title":"My First Test","fullTitle":"My First Test","tests":[{"type":"test","start":"2023-08-31T18:24:30.914Z","end":"2023-08-31T18:24:31.711Z","_duration":797,"uid":"test-00-0","cid":"0-0","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\n        await browser.url('https://www.saucedemo.com/')\n        await $('#user-name').setValue('standard_user')\n        await $('#password').setValue('secret_sauce')\n        await $('#login-button').click()\n\n        const productEl = await $('.header_secondary_container>span')\n        await expect(productEl).toHaveText('Products')\n\n        const shoppCard = await $('#shopping_cart_container>a')\n        await expect(shoppCard).toExist()\n\n        const itemsAmount = await $$('.inventory_item');\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-08-31T18:24:31.714Z","end":"2023-08-31T18:24:33.996Z","_duration":2282,"uid":"test-00-1","cid":"0-0","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\n        const firstItem = await $('.inventory_item');\n        const itemTitle = await firstItem.$('.inventory_item_name');\n        const itemTitleText = await itemTitle.getText();\n        console.log('----------- itemTitleText: ', itemTitleText);\n\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\n        await addCard.click()\n        await browser.pause(2000)\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\n\n        await expect(shoppCard).toHaveText(\"1\")\n        const CardLink = await $('.shopping_cart_link')\n        await CardLink.click()\n        //await browser.pause(2000)\n        //const Product = await $('#item_4_title_link>.inventory_item_name')\n        const Product = await $ ('.inventory_item_name')\n        //await expect(Product).toHaveText(\"Sauce Labs Backpack\")\n        await expect(Product).toHaveText( itemTitleText )\n        //await expect(Product).toHaveText({containing: itemTitleText })???\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\n        await Remove_item.click()\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\n\n    }","events":[],"errorIndex":0}],"hooks":[],"suites":[],"parent":"","hooksAndTests":[{"type":"test","start":"2023-08-31T18:24:30.914Z","end":"2023-08-31T18:24:31.711Z","_duration":797,"uid":"test-00-0","cid":"0-0","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\n        await browser.url('https://www.saucedemo.com/')\n        await $('#user-name').setValue('standard_user')\n        await $('#password').setValue('secret_sauce')\n        await $('#login-button').click()\n\n        const productEl = await $('.header_secondary_container>span')\n        await expect(productEl).toHaveText('Products')\n\n        const shoppCard = await $('#shopping_cart_container>a')\n        await expect(shoppCard).toExist()\n\n        const itemsAmount = await $$('.inventory_item');\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-08-31T18:24:31.714Z","end":"2023-08-31T18:24:33.996Z","_duration":2282,"uid":"test-00-1","cid":"0-0","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\n        const firstItem = await $('.inventory_item');\n        const itemTitle = await firstItem.$('.inventory_item_name');\n        const itemTitleText = await itemTitle.getText();\n        console.log('----------- itemTitleText: ', itemTitleText);\n\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\n        await addCard.click()\n        await browser.pause(2000)\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\n\n        await expect(shoppCard).toHaveText(\"1\")\n        const CardLink = await $('.shopping_cart_link')\n        await CardLink.click()\n        //await browser.pause(2000)\n        //const Product = await $('#item_4_title_link>.inventory_item_name')\n        const Product = await $ ('.inventory_item_name')\n        //await expect(Product).toHaveText(\"Sauce Labs Backpack\")\n        await expect(Product).toHaveText( itemTitleText )\n        //await expect(Product).toHaveText({containing: itemTitleText })???\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\n        await Remove_item.click()\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\n\n    }","events":[],"errorIndex":0}]}],"reportFile":"C:\\Work\\Automation JS My course\\WDIO_test\\reports\\html-reports\\undefined-master-report.html","browserName":"unspecified"}