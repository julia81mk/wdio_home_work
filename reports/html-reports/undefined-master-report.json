{"info":{"type":"runner","start":"2023-09-02T14:09:01.508Z","end":"2023-09-02T14:09:09.817Z","_duration":8309,"cid":"0-1","capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"116.0.5845.110","chrome":{"chromedriverVersion":"116.0.5845.96 (1a391816688002153ef791ffe60d9e899a71a037-refs/branch-heads/5845@{#1382})","userDataDir":"C:\\Users\\Julia\\AppData\\Local\\Temp\\scoped_dir31492_2067035949"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:56283"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true,"sessionId":"9bb53bab5e346b61a43ee35c2ef56967"},"sanitizedCapabilities":"chrome.116_0_5845_110.windows","config":{"protocol":"http","hostname":"0.0.0.0","path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\Julia\\AppData\\Local\\Temp","port":56243,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"automationProtocol":"webdriver","specs":["./test/specs/**/*.js"],"exclude":[],"suites":{},"rootDir":"C:\\Work\\Automation JS My course\\WDIO_test","baseUrl":"http://localhost","bail":0,"waitforInterval":500,"waitforTimeout":10000,"framework":"mocha","reporters":["spec",["html-nice",{"outputDir":"./reports/html-reports/","filename":"report.html","reportTitle":"Test Report Title","linkScreenshots":true,"showInBrowser":false,"collapseTests":false,"useOnAfterCommandForScreenshot":false,"LOG":{"category":"default","context":{},"callStackSkipIndex":0}}]],"services":[],"execArgv":[],"maxInstances":10,"maxInstancesPerCapability":100,"injectGlobals":true,"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"filesToWatch":[],"onPrepare":[null],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[],"beforeCommand":[],"afterCommand":[],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[],"onComplete":[null],"onReload":[]},"specs":["file:///C:/Work/Automation%20JS%20My%20course/WDIO_test/test/specs/test2.e2e.js"],"sessionId":"9bb53bab5e346b61a43ee35c2ef56967","isMultiremote":false,"instanceOptions":{"9bb53bab5e346b61a43ee35c2ef56967":{"protocol":"http","hostname":"0.0.0.0","path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\Julia\\AppData\\Local\\Temp","port":56243,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"automationProtocol":"webdriver","specs":["./test/specs/**/*.js"],"exclude":[],"suites":{},"rootDir":"C:\\Work\\Automation JS My course\\WDIO_test","baseUrl":"http://localhost","bail":0,"waitforInterval":500,"waitforTimeout":10000,"framework":"mocha","reporters":["spec",["html-nice",{"outputDir":"./reports/html-reports/","filename":"report.html","reportTitle":"Test Report Title","linkScreenshots":true,"showInBrowser":false,"collapseTests":false,"useOnAfterCommandForScreenshot":false,"LOG":{"category":"default","context":{},"callStackSkipIndex":0}}]],"services":[],"execArgv":[],"maxInstances":10,"maxInstancesPerCapability":100,"injectGlobals":true,"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"filesToWatch":[],"onPrepare":[null],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[],"beforeCommand":[],"afterCommand":[],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[],"onComplete":[null],"onReload":[]}},"retry":0,"failures":0,"retries":0},"metrics":{"passed":12,"skipped":0,"failed":0,"duration":11182,"start":"2023-09-02T14:09:01.521Z","end":"2023-09-02T14:09:12.703Z"},"title":"Micro-Magic Web Test Report","suites":[{"type":"suite:start","start":"2023-09-02T14:09:01.521Z","end":"2023-09-02T14:09:09.563Z","_duration":8041,"uid":"suite-0-0","cid":"0-1","file":"C:\\Work\\Automation JS My course\\WDIO_test\\test\\specs\\test2.e2e.js","title":"My First Test","fullTitle":"My First Test","tests":[{"type":"test","start":"2023-09-02T14:09:01.523Z","end":"2023-09-02T14:09:05.329Z","_duration":3806,"uid":"test-00-0","cid":"0-1","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        await browser.url(process.env.BASE_URL)\r\n        await $('#user-name').setValue(process.env.USER_NAME)\r\n        await $('#password').setValue(process.env.USER_PASSWORD)\r\n        await $('#login-button').click()\r\n\r\n        const productEl = await $('.header_secondary_container>span')\r\n        await expect(productEl).toHaveText('Products')\r\n\r\n        const shoppCard = await $('#shopping_cart_container>a')\r\n        await expect(shoppCard).toExist()\r\n\r\n        const itemsAmount = await $$('.inventory_item');\r\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\r\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-09-02T14:09:05.336Z","end":"2023-09-02T14:09:09.557Z","_duration":4221,"uid":"test-00-1","cid":"0-1","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        const firstItem = await $('.inventory_item');\r\n        const itemTitle = await firstItem.$('.inventory_item_name');\r\n        const itemTitleText = await itemTitle.getText();\r\n        console.log('----------- itemTitleText: ', itemTitleText);\r\n\r\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\r\n        await addCard.click()\r\n        await browser.pause(2000)\r\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\r\n\r\n        await expect(shoppCard).toHaveText(\"1\")\r\n        const CardLink = await $('.shopping_cart_link')\r\n        await CardLink.click()\r\n        const Product = await $ ('.inventory_item_name')\r\n        await expect(Product).toHaveText( itemTitleText )\r\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\r\n        await Remove_item.click()\r\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\r\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\r\n\r\n    }","events":[],"errorIndex":0}],"hooks":[],"suites":[],"parent":"","hooksAndTests":[{"type":"test","start":"2023-09-02T14:09:01.523Z","end":"2023-09-02T14:09:05.329Z","_duration":3806,"uid":"test-00-0","cid":"0-1","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        await browser.url(process.env.BASE_URL)\r\n        await $('#user-name').setValue(process.env.USER_NAME)\r\n        await $('#password').setValue(process.env.USER_PASSWORD)\r\n        await $('#login-button').click()\r\n\r\n        const productEl = await $('.header_secondary_container>span')\r\n        await expect(productEl).toHaveText('Products')\r\n\r\n        const shoppCard = await $('#shopping_cart_container>a')\r\n        await expect(shoppCard).toExist()\r\n\r\n        const itemsAmount = await $$('.inventory_item');\r\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\r\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-09-02T14:09:05.336Z","end":"2023-09-02T14:09:09.557Z","_duration":4221,"uid":"test-00-1","cid":"0-1","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        const firstItem = await $('.inventory_item');\r\n        const itemTitle = await firstItem.$('.inventory_item_name');\r\n        const itemTitleText = await itemTitle.getText();\r\n        console.log('----------- itemTitleText: ', itemTitleText);\r\n\r\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\r\n        await addCard.click()\r\n        await browser.pause(2000)\r\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\r\n\r\n        await expect(shoppCard).toHaveText(\"1\")\r\n        const CardLink = await $('.shopping_cart_link')\r\n        await CardLink.click()\r\n        const Product = await $ ('.inventory_item_name')\r\n        await expect(Product).toHaveText( itemTitleText )\r\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\r\n        await Remove_item.click()\r\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\r\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\r\n\r\n    }","events":[],"errorIndex":0}]},{"type":"suite:start","start":"2023-09-02T14:09:01.626Z","end":"2023-09-02T14:09:09.650Z","_duration":8022,"uid":"suite-0-0","cid":"0-0","file":"C:\\Work\\Automation JS My course\\WDIO_test\\test\\specs\\test.e2e.js","title":"My First Test","fullTitle":"My First Test","tests":[{"type":"test","start":"2023-09-02T14:09:01.629Z","end":"2023-09-02T14:09:05.168Z","_duration":3539,"uid":"test-00-0","cid":"0-0","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\n        await browser.url(process.env.BASE_URL)\n        await $('#user-name').setValue(process.env.USER_NAME)\n        await $('#password').setValue(process.env.USER_PASSWORD)\n        await $('#login-button').click()\n\n        const productEl = await $('.header_secondary_container>span')\n        await expect(productEl).toHaveText('Products')\n\n        const shoppCard = await $('#shopping_cart_container>a')\n        await expect(shoppCard).toExist()\n\n        const itemsAmount = await $$('.inventory_item');\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-09-02T14:09:05.174Z","end":"2023-09-02T14:09:09.641Z","_duration":4467,"uid":"test-00-1","cid":"0-0","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\n        const firstItem = await $('.inventory_item');\n        const itemTitle = await firstItem.$('.inventory_item_name');\n        const itemTitleText = await itemTitle.getText();\n        console.log('----------- itemTitleText: ', itemTitleText);\n\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\n        await addCard.click()\n        await browser.pause(2000)\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\n\n        await expect(shoppCard).toHaveText(\"1\")\n        const CardLink = await $('.shopping_cart_link')\n        await CardLink.click()\n        //await browser.pause(2000)\n        //const Product = await $('#item_4_title_link>.inventory_item_name')\n        const Product = await $ ('.inventory_item_name')\n        //await expect(Product).toHaveText(\"Sauce Labs Backpack\")\n        await expect(Product).toHaveText( itemTitleText )\n        //await expect(Product).toHaveText({containing: itemTitleText })???\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\n        await Remove_item.click()\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\n\n    }","events":[],"errorIndex":0}],"hooks":[],"suites":[],"parent":"","hooksAndTests":[{"type":"test","start":"2023-09-02T14:09:01.629Z","end":"2023-09-02T14:09:05.168Z","_duration":3539,"uid":"test-00-0","cid":"0-0","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\n        await browser.url(process.env.BASE_URL)\n        await $('#user-name').setValue(process.env.USER_NAME)\n        await $('#password').setValue(process.env.USER_PASSWORD)\n        await $('#login-button').click()\n\n        const productEl = await $('.header_secondary_container>span')\n        await expect(productEl).toHaveText('Products')\n\n        const shoppCard = await $('#shopping_cart_container>a')\n        await expect(shoppCard).toExist()\n\n        const itemsAmount = await $$('.inventory_item');\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-09-02T14:09:05.174Z","end":"2023-09-02T14:09:09.641Z","_duration":4467,"uid":"test-00-1","cid":"0-0","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\n        const firstItem = await $('.inventory_item');\n        const itemTitle = await firstItem.$('.inventory_item_name');\n        const itemTitleText = await itemTitle.getText();\n        console.log('----------- itemTitleText: ', itemTitleText);\n\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\n        await addCard.click()\n        await browser.pause(2000)\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\n\n        await expect(shoppCard).toHaveText(\"1\")\n        const CardLink = await $('.shopping_cart_link')\n        await CardLink.click()\n        //await browser.pause(2000)\n        //const Product = await $('#item_4_title_link>.inventory_item_name')\n        const Product = await $ ('.inventory_item_name')\n        //await expect(Product).toHaveText(\"Sauce Labs Backpack\")\n        await expect(Product).toHaveText( itemTitleText )\n        //await expect(Product).toHaveText({containing: itemTitleText })???\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\n        await Remove_item.click()\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\n\n    }","events":[],"errorIndex":0}]},{"type":"suite:start","start":"2023-09-02T14:09:02.988Z","end":"2023-09-02T14:09:09.868Z","_duration":6879,"uid":"suite-0-0","cid":"0-2","file":"C:\\Work\\Automation JS My course\\WDIO_test\\test\\specs\\test3.e2e.js","title":"My First Test","fullTitle":"My First Test","tests":[{"type":"test","start":"2023-09-02T14:09:02.989Z","end":"2023-09-02T14:09:06.301Z","_duration":3312,"uid":"test-00-0","cid":"0-2","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        await browser.url(process.env.BASE_URL)\r\n        await $('#user-name').setValue(process.env.USER_NAME)\r\n        await $('#password').setValue(process.env.USER_PASSWORD)\r\n        await $('#login-button').click()\r\n\r\n        const productEl = await $('.header_secondary_container>span')\r\n        await expect(productEl).toHaveText('Products')\r\n\r\n        const shoppCard = await $('#shopping_cart_container>a')\r\n        await expect(shoppCard).toExist()\r\n\r\n        const itemsAmount = await $$('.inventory_item');\r\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\r\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-09-02T14:09:06.308Z","end":"2023-09-02T14:09:09.864Z","_duration":3556,"uid":"test-00-1","cid":"0-2","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        const firstItem = await $('.inventory_item');\r\n        const itemTitle = await firstItem.$('.inventory_item_name');\r\n        const itemTitleText = await itemTitle.getText();\r\n        console.log('----------- itemTitleText: ', itemTitleText);\r\n\r\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\r\n        await addCard.click()\r\n        await browser.pause(2000)\r\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\r\n\r\n        await expect(shoppCard).toHaveText(\"1\")\r\n        const CardLink = await $('.shopping_cart_link')\r\n        await CardLink.click()\r\n        const Product = await $ ('.inventory_item_name')\r\n        await expect(Product).toHaveText( itemTitleText )\r\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\r\n        await Remove_item.click()\r\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\r\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\r\n\r\n    }","events":[],"errorIndex":0}],"hooks":[],"suites":[],"parent":"","hooksAndTests":[{"type":"test","start":"2023-09-02T14:09:02.989Z","end":"2023-09-02T14:09:06.301Z","_duration":3312,"uid":"test-00-0","cid":"0-2","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        await browser.url(process.env.BASE_URL)\r\n        await $('#user-name').setValue(process.env.USER_NAME)\r\n        await $('#password').setValue(process.env.USER_PASSWORD)\r\n        await $('#login-button').click()\r\n\r\n        const productEl = await $('.header_secondary_container>span')\r\n        await expect(productEl).toHaveText('Products')\r\n\r\n        const shoppCard = await $('#shopping_cart_container>a')\r\n        await expect(shoppCard).toExist()\r\n\r\n        const itemsAmount = await $$('.inventory_item');\r\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\r\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-09-02T14:09:06.308Z","end":"2023-09-02T14:09:09.864Z","_duration":3556,"uid":"test-00-1","cid":"0-2","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        const firstItem = await $('.inventory_item');\r\n        const itemTitle = await firstItem.$('.inventory_item_name');\r\n        const itemTitleText = await itemTitle.getText();\r\n        console.log('----------- itemTitleText: ', itemTitleText);\r\n\r\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\r\n        await addCard.click()\r\n        await browser.pause(2000)\r\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\r\n\r\n        await expect(shoppCard).toHaveText(\"1\")\r\n        const CardLink = await $('.shopping_cart_link')\r\n        await CardLink.click()\r\n        const Product = await $ ('.inventory_item_name')\r\n        await expect(Product).toHaveText( itemTitleText )\r\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\r\n        await Remove_item.click()\r\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\r\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\r\n\r\n    }","events":[],"errorIndex":0}]},{"type":"suite:start","start":"2023-09-02T14:09:06.150Z","end":"2023-09-02T14:09:12.703Z","_duration":6553,"uid":"suite-0-0","cid":"1-2","file":"C:\\Work\\Automation JS My course\\WDIO_test\\test\\specs\\test3.e2e.js","title":"My First Test","fullTitle":"My First Test","tests":[{"type":"test","start":"2023-09-02T14:09:06.152Z","end":"2023-09-02T14:09:09.729Z","_duration":3577,"uid":"test-00-0","cid":"1-2","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        await browser.url(process.env.BASE_URL)\r\n        await $('#user-name').setValue(process.env.USER_NAME)\r\n        await $('#password').setValue(process.env.USER_PASSWORD)\r\n        await $('#login-button').click()\r\n\r\n        const productEl = await $('.header_secondary_container>span')\r\n        await expect(productEl).toHaveText('Products')\r\n\r\n        const shoppCard = await $('#shopping_cart_container>a')\r\n        await expect(shoppCard).toExist()\r\n\r\n        const itemsAmount = await $$('.inventory_item');\r\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\r\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-09-02T14:09:09.740Z","end":"2023-09-02T14:09:12.701Z","_duration":2961,"uid":"test-00-1","cid":"1-2","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        const firstItem = await $('.inventory_item');\r\n        const itemTitle = await firstItem.$('.inventory_item_name');\r\n        const itemTitleText = await itemTitle.getText();\r\n        console.log('----------- itemTitleText: ', itemTitleText);\r\n\r\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\r\n        await addCard.click()\r\n        await browser.pause(2000)\r\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\r\n\r\n        await expect(shoppCard).toHaveText(\"1\")\r\n        const CardLink = await $('.shopping_cart_link')\r\n        await CardLink.click()\r\n        const Product = await $ ('.inventory_item_name')\r\n        await expect(Product).toHaveText( itemTitleText )\r\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\r\n        await Remove_item.click()\r\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\r\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\r\n\r\n    }","events":[],"errorIndex":0}],"hooks":[],"suites":[],"parent":"","hooksAndTests":[{"type":"test","start":"2023-09-02T14:09:06.152Z","end":"2023-09-02T14:09:09.729Z","_duration":3577,"uid":"test-00-0","cid":"1-2","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        await browser.url(process.env.BASE_URL)\r\n        await $('#user-name').setValue(process.env.USER_NAME)\r\n        await $('#password').setValue(process.env.USER_PASSWORD)\r\n        await $('#login-button').click()\r\n\r\n        const productEl = await $('.header_secondary_container>span')\r\n        await expect(productEl).toHaveText('Products')\r\n\r\n        const shoppCard = await $('#shopping_cart_container>a')\r\n        await expect(shoppCard).toExist()\r\n\r\n        const itemsAmount = await $$('.inventory_item');\r\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\r\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-09-02T14:09:09.740Z","end":"2023-09-02T14:09:12.701Z","_duration":2961,"uid":"test-00-1","cid":"1-2","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        const firstItem = await $('.inventory_item');\r\n        const itemTitle = await firstItem.$('.inventory_item_name');\r\n        const itemTitleText = await itemTitle.getText();\r\n        console.log('----------- itemTitleText: ', itemTitleText);\r\n\r\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\r\n        await addCard.click()\r\n        await browser.pause(2000)\r\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\r\n\r\n        await expect(shoppCard).toHaveText(\"1\")\r\n        const CardLink = await $('.shopping_cart_link')\r\n        await CardLink.click()\r\n        const Product = await $ ('.inventory_item_name')\r\n        await expect(Product).toHaveText( itemTitleText )\r\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\r\n        await Remove_item.click()\r\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\r\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\r\n\r\n    }","events":[],"errorIndex":0}]},{"type":"suite:start","start":"2023-09-02T14:09:06.622Z","end":"2023-09-02T14:09:12.050Z","_duration":5427,"uid":"suite-0-0","cid":"1-0","file":"C:\\Work\\Automation JS My course\\WDIO_test\\test\\specs\\test.e2e.js","title":"My First Test","fullTitle":"My First Test","tests":[{"type":"test","start":"2023-09-02T14:09:06.626Z","end":"2023-09-02T14:09:09.221Z","_duration":2595,"uid":"test-00-0","cid":"1-0","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\n        await browser.url(process.env.BASE_URL)\n        await $('#user-name').setValue(process.env.USER_NAME)\n        await $('#password').setValue(process.env.USER_PASSWORD)\n        await $('#login-button').click()\n\n        const productEl = await $('.header_secondary_container>span')\n        await expect(productEl).toHaveText('Products')\n\n        const shoppCard = await $('#shopping_cart_container>a')\n        await expect(shoppCard).toExist()\n\n        const itemsAmount = await $$('.inventory_item');\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-09-02T14:09:09.224Z","end":"2023-09-02T14:09:12.048Z","_duration":2824,"uid":"test-00-1","cid":"1-0","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\n        const firstItem = await $('.inventory_item');\n        const itemTitle = await firstItem.$('.inventory_item_name');\n        const itemTitleText = await itemTitle.getText();\n        console.log('----------- itemTitleText: ', itemTitleText);\n\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\n        await addCard.click()\n        await browser.pause(2000)\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\n\n        await expect(shoppCard).toHaveText(\"1\")\n        const CardLink = await $('.shopping_cart_link')\n        await CardLink.click()\n        //await browser.pause(2000)\n        //const Product = await $('#item_4_title_link>.inventory_item_name')\n        const Product = await $ ('.inventory_item_name')\n        //await expect(Product).toHaveText(\"Sauce Labs Backpack\")\n        await expect(Product).toHaveText( itemTitleText )\n        //await expect(Product).toHaveText({containing: itemTitleText })???\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\n        await Remove_item.click()\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\n\n    }","events":[],"errorIndex":0}],"hooks":[],"suites":[],"parent":"","hooksAndTests":[{"type":"test","start":"2023-09-02T14:09:06.626Z","end":"2023-09-02T14:09:09.221Z","_duration":2595,"uid":"test-00-0","cid":"1-0","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\n        await browser.url(process.env.BASE_URL)\n        await $('#user-name').setValue(process.env.USER_NAME)\n        await $('#password').setValue(process.env.USER_PASSWORD)\n        await $('#login-button').click()\n\n        const productEl = await $('.header_secondary_container>span')\n        await expect(productEl).toHaveText('Products')\n\n        const shoppCard = await $('#shopping_cart_container>a')\n        await expect(shoppCard).toExist()\n\n        const itemsAmount = await $$('.inventory_item');\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-09-02T14:09:09.224Z","end":"2023-09-02T14:09:12.048Z","_duration":2824,"uid":"test-00-1","cid":"1-0","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\n        const firstItem = await $('.inventory_item');\n        const itemTitle = await firstItem.$('.inventory_item_name');\n        const itemTitleText = await itemTitle.getText();\n        console.log('----------- itemTitleText: ', itemTitleText);\n\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\n        await addCard.click()\n        await browser.pause(2000)\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\n\n        await expect(shoppCard).toHaveText(\"1\")\n        const CardLink = await $('.shopping_cart_link')\n        await CardLink.click()\n        //await browser.pause(2000)\n        //const Product = await $('#item_4_title_link>.inventory_item_name')\n        const Product = await $ ('.inventory_item_name')\n        //await expect(Product).toHaveText(\"Sauce Labs Backpack\")\n        await expect(Product).toHaveText( itemTitleText )\n        //await expect(Product).toHaveText({containing: itemTitleText })???\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\n        await Remove_item.click()\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\n\n    }","events":[],"errorIndex":0}]},{"type":"suite:start","start":"2023-09-02T14:09:06.675Z","end":"2023-09-02T14:09:11.867Z","_duration":5191,"uid":"suite-0-0","cid":"1-1","file":"C:\\Work\\Automation JS My course\\WDIO_test\\test\\specs\\test2.e2e.js","title":"My First Test","fullTitle":"My First Test","tests":[{"type":"test","start":"2023-09-02T14:09:06.678Z","end":"2023-09-02T14:09:09.027Z","_duration":2349,"uid":"test-00-0","cid":"1-1","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        await browser.url(process.env.BASE_URL)\r\n        await $('#user-name').setValue(process.env.USER_NAME)\r\n        await $('#password').setValue(process.env.USER_PASSWORD)\r\n        await $('#login-button').click()\r\n\r\n        const productEl = await $('.header_secondary_container>span')\r\n        await expect(productEl).toHaveText('Products')\r\n\r\n        const shoppCard = await $('#shopping_cart_container>a')\r\n        await expect(shoppCard).toExist()\r\n\r\n        const itemsAmount = await $$('.inventory_item');\r\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\r\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-09-02T14:09:09.030Z","end":"2023-09-02T14:09:11.866Z","_duration":2836,"uid":"test-00-1","cid":"1-1","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        const firstItem = await $('.inventory_item');\r\n        const itemTitle = await firstItem.$('.inventory_item_name');\r\n        const itemTitleText = await itemTitle.getText();\r\n        console.log('----------- itemTitleText: ', itemTitleText);\r\n\r\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\r\n        await addCard.click()\r\n        await browser.pause(2000)\r\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\r\n\r\n        await expect(shoppCard).toHaveText(\"1\")\r\n        const CardLink = await $('.shopping_cart_link')\r\n        await CardLink.click()\r\n        const Product = await $ ('.inventory_item_name')\r\n        await expect(Product).toHaveText( itemTitleText )\r\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\r\n        await Remove_item.click()\r\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\r\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\r\n\r\n    }","events":[],"errorIndex":0}],"hooks":[],"suites":[],"parent":"","hooksAndTests":[{"type":"test","start":"2023-09-02T14:09:06.678Z","end":"2023-09-02T14:09:09.027Z","_duration":2349,"uid":"test-00-0","cid":"1-1","title":"Test 1 - Perform Login","fullTitle":"My First Test.Test 1 - Perform Login","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        await browser.url(process.env.BASE_URL)\r\n        await $('#user-name').setValue(process.env.USER_NAME)\r\n        await $('#password').setValue(process.env.USER_PASSWORD)\r\n        await $('#login-button').click()\r\n\r\n        const productEl = await $('.header_secondary_container>span')\r\n        await expect(productEl).toHaveText('Products')\r\n\r\n        const shoppCard = await $('#shopping_cart_container>a')\r\n        await expect(shoppCard).toExist()\r\n\r\n        const itemsAmount = await $$('.inventory_item');\r\n        await expect(itemsAmount).toBeElementsArrayOfSize({ gte: 1 });\r\n    }","events":[],"errorIndex":0},{"type":"test","start":"2023-09-02T14:09:09.030Z","end":"2023-09-02T14:09:11.866Z","_duration":2836,"uid":"test-00-1","cid":"1-1","title":"Test 2 - Add product to the cart","fullTitle":"My First Test.Test 2 - Add product to the cart","output":[],"retries":0,"parent":"My First Test","state":"passed","body":"async () => {\r\n        const firstItem = await $('.inventory_item');\r\n        const itemTitle = await firstItem.$('.inventory_item_name');\r\n        const itemTitleText = await itemTitle.getText();\r\n        console.log('----------- itemTitleText: ', itemTitleText);\r\n\r\n        const addCard = await $('button[id=\"add-to-cart-sauce-labs-backpack\"]')\r\n        await addCard.click()\r\n        await browser.pause(2000)\r\n        const shoppCard = await $('.shopping_cart_link>.shopping_cart_badge')\r\n\r\n        await expect(shoppCard).toHaveText(\"1\")\r\n        const CardLink = await $('.shopping_cart_link')\r\n        await CardLink.click()\r\n        const Product = await $ ('.inventory_item_name')\r\n        await expect(Product).toHaveText( itemTitleText )\r\n        const Remove_item = await $('button[id=\"remove-sauce-labs-backpack\"]')\r\n        await Remove_item.click()\r\n        const shoppingCartBadgeContainer = await $('.shopping_cart_link');\r\n        await expect(shoppingCartBadgeContainer).toHaveChildren({ eq: 0 });\r\n\r\n    }","events":[],"errorIndex":0}]}],"reportFile":"C:\\Work\\Automation JS My course\\WDIO_test\\reports\\html-reports\\undefined-master-report.html"}